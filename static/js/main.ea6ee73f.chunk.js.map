{"version":3,"sources":["hoc/asyncComponent.js","axios.js","components/Post/Post.js","containers/Blog/FullPost/FullPost.js","components/UI/Spinner.js","containers/Blog/Posts/Posts.js","containers/Blog/Blog.js","App.js","registerServiceWorker.js","index.js"],"names":["asyncComponent","importComponent","_Component","_temp","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","component","inherits","createClass","key","value","_this2","then","comp","setState","default","C","react_default","a","createElement","props","Component","instance","axios","create","baseURL","defaults","headers","common","withRouter","className","onClick","clicked","title","author","FullPost","loadedPost","deletePostHandler","delete","match","params","id","response","console","log","loadData","get","data","post","style","textAlign","body","Spinner","Posts","posts","loading","postSelectedHandler","history","push","pathname","updatedPosts","slice","map","objectSpread","catch","error","_this3","Post_Post","components_UI_Spinner","Route","path","AsyncComponent","__webpack_require__","e","bind","Blog","auth","NavLink","to","exact","activeClassName","activeStyle","color","textDecoration","hash","search","Switch","Redirect","from","App","BrowserRouter","containers_Blog_Blog","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","requestIntercepton","interceptors","request","use","Promise","reject","responseIntercepton","eject","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ea6ee73f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst asyncComponent = importComponent => {\r\n  return class extends Component {\r\n    state = {\r\n      component: null\r\n    };\r\n\r\n    componentDidMount() {\r\n      importComponent().then(comp => {\r\n        this.setState({ component: comp.default });\r\n      });\r\n    }\r\n    render() {\r\n      const C = this.state.component;\r\n\r\n      return C ? <C {...this.props} /> : null;\r\n    }\r\n  };\r\n};\r\n\r\nexport default asyncComponent;\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://jsonplaceholder.typicode.com/'\r\n});\r\n\r\ninstance.defaults.headers.common[\"Authorization\"] = \"AUTH TOKEN\";\r\n\r\n//instance.interceptors.request...\r\n\r\nexport default instance;","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./Post.css\";\n\nconst post = props => {\n  //console.log(props);\n  return (\n    <article className=\"Post\" onClick={props.clicked}>\n      <h1>{props.title}</h1>\n      <div className=\"Info\">\n        <div className=\"Author\">{props.author}</div>\n      </div>\n    </article>\n  );\n};\n\nexport default withRouter(post);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport \"./FullPost.css\";\n\nclass FullPost extends Component {\n  state = {\n    loadedPost: null\n  };\n\n  componentDidMount() {\n    console.log(this.props);\n    this.loadData();\n  }\n\n  componentDidUpdate() {\n    this.loadData();\n  }\n\n  loadData() {\n    if (this.props.match.params.id) {\n      if (\n        !this.state.loadedPost ||\n        (this.state.loadedPost &&\n          this.state.loadedPost.id !== +this.props.match.params.id)\n      ) {\n        axios.get(\"/posts/\" + this.props.match.params.id).then(response => {\n          // console.log(response);\n          this.setState({ loadedPost: response.data });\n        });\n      }\n    }\n  }\n\n  deletePostHandler = () => {\n    axios.delete(\"/posts/\" + this.props.match.params.id).then(response => {\n      console.log(response);\n    });\n  };\n\n  render() {\n    let post = <p style={{ textAlign: \"center\" }}>Please select a Post!</p>;\n    if (this.props.match.params.id) {\n      post = <p style={{ textAlign: \"center\" }}>Loading...!</p>;\n    }\n    if (this.state.loadedPost) {\n      post = (\n        <div className=\"FullPost\">\n          <h1>{this.state.loadedPost.title}</h1>\n          <p>{this.state.loadedPost.body}</p>\n          <div className=\"Edit\">\n            <button onClick={this.deletePostHandler} className=\"Delete\">\n              Delete\n            </button>\n          </div>\n        </div>\n      );\n    }\n    return post;\n  }\n}\n\nexport default FullPost;\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = props => <div className=\"Spinner\" />;\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../../axios\";\r\nimport Post from \"./../../../components/Post/Post\";\r\nimport \"./Posts.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport FullPost from \"./../FullPost/FullPost\";\r\nimport Spinner from \"./../../../components/UI/Spinner\";\r\n\r\nclass Posts extends Component {\r\n  state = {\r\n    posts: [],\r\n    loading: false\r\n  };\r\n\r\n  postSelectedHandler = id => {\r\n    this.props.history.push({ pathname: \"/posts/\" + id });\r\n  };\r\n\r\n  componentDidMount() {\r\n    //console.log(this.props);\r\n    this.setState({ loading: true });\r\n    axios\r\n      .get(\"/posts\")\r\n      .then(response => {\r\n        const posts = response.data.slice(0, 4);\r\n        const updatedPosts = posts.map(post => {\r\n          return {\r\n            ...post,\r\n            author: \"Max\"\r\n          };\r\n        });\r\n        this.setState({ posts: updatedPosts, loading: false });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        //this.setState({ error: true });\r\n        this.setState({ loading: false });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let posts = <p style={{ textAlign: \"center\" }}> Something went wrong!</p>;\r\n\r\n    if (!this.state.error)\r\n      posts = this.state.posts.map(post => {\r\n        return (\r\n          // <Link key={post.id} to={\"/\" + post.id}>\r\n          <Post\r\n            key={post.id}\r\n            title={post.title}\r\n            author={post.author}\r\n            clicked={() => this.postSelectedHandler(post.id)}\r\n          />\r\n          // </Link>\r\n        );\r\n      });\r\n    return (\r\n      <div>\r\n        <section className=\"Posts\">{posts}</section>\r\n        {this.state.loading ? (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            {\" \"}\r\n            <Spinner />\r\n          </div>\r\n        ) : null}\r\n        <Route path={\"/posts/:id\"} component={FullPost} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posts;\r\n","import React, { Component } from \"react\";\nimport { NavLink, Redirect, Route, Switch } from \"react-router-dom\";\nimport asyncComponent from \"./../../hoc/asyncComponent\";\nimport \"./Blog.css\";\nimport Posts from \"./Posts/Posts\";\n// import NewPost from \"./NewPost/NewPost\";\n\nconst AsyncComponent = asyncComponent(() => {\n  return import(\"./NewPost/NewPost\");\n});\n\nclass Blog extends Component {\n  state = {\n    auth: true\n  };\n\n  render() {\n    return (\n      <div className=\"Blog\">\n        <header>\n          <nav>\n            <ul>\n              <li>\n                <NavLink\n                  to=\"/posts\"\n                  exact\n                  activeClassName=\"my-active\"\n                  activeStyle={{\n                    color: \"firebrick\",\n                    textDecoration: \"underline\"\n                  }}\n                >\n                  Posts\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={{\n                    pathname: \"/new-post\",\n                    hash: \"#submit\",\n                    search: \"?quick-submit=true\"\n                  }}\n                  activeClassName=\"my-active\"\n                >\n                  New Post\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n        </header>\n\n        <Switch>\n          {this.state.auth ? (\n            <Route path=\"/new-post\" component={AsyncComponent} />\n          ) : null}\n          <Route path=\"/posts\" component={Posts} />\n          {/* <Route render={() => <h1 style={{textAlign: \"center\"}}> 404 NOT FOUND  </h1>}/> */}\n          <Redirect from=\"/\" to=\"/posts\" />\n          {/* <Route path=\"/\" component={Posts} /> */}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Blog;\n","import React, { Component } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Blog from \"./containers/Blog/Blog\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n       {/* <BrowserRouter basename=\"/my-app\"> */}\n        <div className=\"App\">\n          <Blog />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from \"axios\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\naxios.defaults.baseURL = \"https://jsonplaceholder.typicode.com/\";\naxios.defaults.headers.common[\"Authorization\"] = \"AUTH TOKEN\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\nvar requestIntercepton = axios.interceptors.request.use(\n  request => {\n    console.log(request);\n    //Edit request config\n    return request;\n  },\n  error => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\nvar responseIntercepton = axios.interceptors.response.use(\n  response => {\n    console.log(response);\n    //Edit response config\n    return response;\n  },\n  error => {\n    console.log(error);\n    return Promise.reject(error);\n  }\n);\n\n//Eject Interceptors ---- comment if you want to use them\naxios.interceptors.request.eject(requestIntercepton);\naxios.interceptors.response.eject(responseIntercepton);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}